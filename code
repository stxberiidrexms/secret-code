<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Secret Code Generator and Decoder</title>
    <style>
        /* General Styling */
        body {
            font-family: 'Comic Sans MS', sans-serif;
            text-align: center;
            background: linear-gradient(to bottom right, lightblue, lightgreen);
            color: #333;
            margin: 0;
            padding: 0;
        }

        h1, h3, p {
            color: #ff6fa1; /* Bubblegum pink */
        }

        textarea, button {
            margin: 10px 0;
            padding: 10px;
            font-size: 16px;
            border: 2px solid #ffb6c1; /* Light pink border */
            border-radius: 8px;
            resize: none;
        }

        button {
            background-color: #f9d5e5; /* Pastel pink */
            color: #333;
            font-weight: bold;
            cursor: pointer;
        }

        button:hover {
            background-color: #ffcad4; /* Slightly darker pastel pink */
        }

        textarea {
            width: 80%;
            height: 100px;
        }

        /* Decoder Button Styling */
        #decoderButton {
            position: absolute;
            bottom: 20px;
            right: 20px;
            padding: 8px 15px;
            font-size: 14px;
            border: 2px solid #ffb6c1;
            border-radius: 8px;
            background-color: #ffb3ba;
            color: white;
        }

        #decoderButton:hover {
            background-color: #ff9aa2;
        }

        /* Decoder Section */
        #decoder {
            display: none;
            margin-top: 20px;
        }

        /* Close Button Styling */
        #closeButton {
            background-color: #ffb3ba;
            color: white;
            position: absolute;
            top: 10px;
            right: 10px;
            border: none;
            padding: 5px 10px;
            font-size: 18px;
            cursor: pointer;
        }

        #closeButton:hover {
            background-color: #ff9aa2;
        }

        /* Background Images */
        body::before {
            content: '';
            background: url('https://static.wikia.nocookie.net/gensin-impact/images/a/a5/Tartaglia_Character_Art_1.png/revision/latest/scale-to-width-down/750?cb=20201023063947') no-repeat top left,
                        url('https://static.wikia.nocookie.net/gensin-impact/images/6/68/Tartaglia_Character_Art_2.png/revision/latest/scale-to-width-down/750?cb=20201023063947') no-repeat bottom right;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            opacity: 0.15;
            z-index: -1;
        }

        /* Credits Section */
        #credits {
            position: absolute;
            top: 10px;
            left: 10px;
            text-align: left;
            font-size: 14px;
            background-color: rgba(255, 255, 255, 0.8);
            padding: 5px 10px;
            border-radius: 8px;
        }
    </style>
</head>
<body>
    <!-- Credits Section -->
    <div id="credits">
        <strong>Website coding:</strong> Starr<br>
        <strong>The secret code:</strong> Malath and her friends
    </div>

    <h1>Secret Code Generator and Decoder</h1>
    <p>Type your text below and click "Generate Code" to see the encoded message!</p>

    <!-- Secret Code Generator -->
    <div id="encoder">
        <textarea id="inputText" placeholder="Enter your text here..."></textarea><br>
        <button onclick="generateCode()">Generate Code</button>
        <h3>Secret Code:</h3>
        <textarea id="outputText" readonly placeholder="Your secret code will appear here..."></textarea>
    </div>

    <!-- Button to open decoder -->
    <button id="decoderButton" onclick="toggleDecoder()">Open Decoder</button>

    <!-- Secret Code Decoder Section -->
    <div id="decoder">
        <button id="closeButton" onclick="closeDecoder()">X</button>
        <h3>Decode Your Secret Code</h3>
        <textarea id="encodedText" placeholder="Enter your encoded text here..."></textarea><br>
        <button onclick="decodeText()">Decode</button>
        <h3>Original Text:</h3>
        <textarea id="decodedText" readonly placeholder="Your original text will appear here..."></textarea>
    </div>

    <script>
        // Correct keyboard mapping for encoding
        const encodeMapping = {
            q: 'w', w: 'e', e: 'r', r: 't', t: 'y', y: 'u', u: 'i', i: 'o', o: 'p', p: 'o',
            a: 's', s: 'd', d: 'f', f: 'g', g: 'h', h: 'j', j: 'k', k: 'l', l: 'k',
            z: 'x', x: 'c', c: 'v', v: 'b', b: 'n', n: 'm', m: 'n',
            Q: 'W', W: 'E', E: 'R', R: 'T', T: 'Y', Y: 'U', U: 'I', I: 'O', O: 'P', P: 'O',
            A: 'S', S: 'D', D: 'F', F: 'G', G: 'H', H: 'J', J: 'K', K: 'L', L: 'K',
            Z: 'X', X: 'C', C: 'V', V: 'B', B: 'N', N: 'M', M: 'N'
        };

        // Reverse keyboard mapping for decoding
        const decodeMapping = {};
        for (let key in encodeMapping) {
            decodeMapping[encodeMapping[key]] = key;
        }

        // Function to generate secret code
        function generateCode() {
            const input = document.getElementById('inputText').value;
            let secretCode = '';

            for (let char of input) {
                if (encodeMapping[char]) {
                    secretCode += encodeMapping[char];
                } else {
                    secretCode += char; // Keep non-alphabetic characters unchanged
                }
            }

            document.getElementById('outputText').value = secretCode;
        }

        // Function to decode text
        function decodeText() {
            const encoded = document.getElementById('encodedText').value;
            let originalText = '';

            for (let char of encoded) {
                if (decodeMapping[char]) {
                    originalText += decodeMapping[char];
                } else {
                    originalText += char; // Keep non-alphabetic characters unchanged
                }
            }

            document.getElementById('decodedText').value = originalText;
        }

        // Function to toggle decoder visibility
        function toggleDecoder() {
            const encoder = document.getElementById('encoder');
            const decoder = document.getElementById('decoder');
            const decoderButton = document.getElementById('decoderButton');

            // Hide encoder and show decoder
            encoder.style.display = 'none';
            decoder.style.display = 'block';
            decoderButton.style.display = 'none';
        }

        // Function to close the decoder
        function closeDecoder() {
            const encoder = document.getElementById('encoder');
            const decoder = document.getElementById('decoder');
            const decoderButton = document.getElementById('decoderButton');

            // Show encoder and hide decoder
            encoder.style.display = 'block';
            decoder.style.display = 'none';
            decoderButton.style.display = 'inline-block';
        }
    </script>
</body>
</html>
